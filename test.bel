(def map (f . ls))()
  ;(if (no ls)       nil
  ;    (some no ls)  nil
  ;    (no (cdr ls)) (cons (f (car (car ls)))
  ;                        (map f (cdr (car ls))))
  ;                  (cons (apply f (map car ls))
  ;                        (apply map f (map cdr ls)))))
;a!b
;c|isa!cont
;(id 2.x 3.x)
;a!b.c
;!a
;.x
;a:b:c
;~f
;x|~f:g!a
;(def prn args
;  (map [do (print _) (prc \()] args)
;  (prc \lf)
;  (last args))

;(do (map [prc _ s] " \"'`,[\n(.\")],@ ")
;    (print rest s names newhist))

;(a b)
